_bolt_lineno = [1, 8], [1, 2]
_bolt_helper_interpolate_scoreboard_slot = _bolt_runtime.helpers['interpolate_scoreboard_slot']
_bolt_helper_children = _bolt_runtime.helpers['children']
_bolt_helper_replace = _bolt_runtime.helpers['replace']
with _bolt_runtime.scope() as _bolt_var3:
    _bolt_var0 = 'red'
    color = _bolt_var0
    _bolt_var1 = color
    _bolt_var2 = 'sidebar.team.{}'.format(_bolt_var1)
    _bolt_var2 = _bolt_helper_interpolate_scoreboard_slot(_bolt_var2, _bolt_refs[0])
    _bolt_runtime.commands.append(_bolt_helper_replace(_bolt_refs[2], arguments=_bolt_helper_children([_bolt_var2, _bolt_refs[1]])))
_bolt_var4 = _bolt_helper_replace(_bolt_refs[3], commands=_bolt_helper_children(_bolt_var3))
---
output = _bolt_var4
---
_bolt_refs[0]
<class 'bolt.ast.AstInterpolation'>
  location: SourceLocation(pos=47, lineno=2, colno=34)
  end_location: SourceLocation(pos=70, lineno=2, colno=57)
  prefix: None
  unpack: None
  converter: 'scoreboard_slot'
  value:
    <class 'bolt.ast.AstFormatString'>
_bolt_refs[1]
<class 'mecha.ast.AstObjective'>
  location: SourceLocation(pos=71, lineno=2, colno=58)
  end_location: SourceLocation(pos=86, lineno=2, colno=73)
  value: 'some_score_name'
_bolt_refs[2]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=14, lineno=2, colno=1)
  end_location: SourceLocation(pos=86, lineno=2, colno=73)
  identifier: 'scoreboard:objectives:setdisplay:slot:objective'
  arguments:
    <class 'bolt.ast.AstInterpolation'>
    <class 'mecha.ast.AstObjective'>
_bolt_refs[3]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=87, lineno=3, colno=1)
  commands:
    <class 'bolt.ast.AstStatement'>
    <class 'mecha.ast.AstCommand'>
