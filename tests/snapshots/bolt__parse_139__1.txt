_bolt_lineno = [1, 15, 19, 27, 38], [1, 2, 3, 4, 6]
_bolt_helper_get_attribute_handler = _bolt_runtime.helpers['get_attribute_handler']
_bolt_helper_interpolate_resource_location = _bolt_runtime.helpers['interpolate_resource_location']
_bolt_helper_children = _bolt_runtime.helpers['children']
_bolt_helper_operator_not = _bolt_runtime.helpers['operator_not']
_bolt_helper_branch = _bolt_runtime.helpers['branch']
_bolt_helper_interpolate_range = _bolt_runtime.helpers['interpolate_range']
_bolt_helper_replace = _bolt_runtime.helpers['replace']
_bolt_helper_interpolate_message = _bolt_runtime.helpers['interpolate_message']
with _bolt_runtime.scope() as _bolt_var10:
    _bolt_var0 = generate_tree
    _bolt_var1 = 'abcdefghijklmnopqrstuvwxyz0123456789'
    _bolt_var0 = _bolt_var0(_bolt_var1)
    for node in _bolt_var0:
        _bolt_var2 = node
        _bolt_var2 = _bolt_helper_get_attribute_handler(_bolt_var2)["parent"]
        _bolt_var2 = _bolt_helper_interpolate_resource_location(_bolt_var2, _bolt_refs[0])
        with _bolt_runtime.push_nesting('append:function:name:commands', *_bolt_helper_children([_bolt_var2])), _bolt_runtime.scope() as _bolt_var9:
            _bolt_var3 = node
            _bolt_var3 = _bolt_helper_get_attribute_handler(_bolt_var3)["partition"]
            _bolt_var4 = 5
            _bolt_var3 = _bolt_var3(_bolt_var4)
            _bolt_var3_inverse = _bolt_helper_operator_not(_bolt_var3)
            with _bolt_helper_branch(_bolt_var3) as _bolt_condition:
                if _bolt_condition:
                    with _bolt_runtime.push_nesting('execute:subcommand'):
                        _bolt_var5 = node
                        _bolt_var5 = _bolt_helper_get_attribute_handler(_bolt_var5)["range"]
                        _bolt_var5 = _bolt_helper_interpolate_range(_bolt_var5, _bolt_refs[1])
                        with _bolt_runtime.push_nesting('execute:if:score:target:targetObjective:matches:range:subcommand', *_bolt_helper_children([_bolt_refs[2], _bolt_refs[3], _bolt_var5])), _bolt_runtime.push_nesting('execute:run:subcommand'):
                            _bolt_var6 = node
                            _bolt_var6 = _bolt_helper_get_attribute_handler(_bolt_var6)["children"]
                            _bolt_var6 = _bolt_helper_interpolate_resource_location(_bolt_var6, _bolt_refs[4])
                    _bolt_runtime.commands.append(_bolt_helper_replace(_bolt_refs[8], arguments=_bolt_helper_children([_bolt_helper_replace(_bolt_refs[7], arguments=_bolt_helper_children([*_bolt_helper_children([_bolt_refs[2], _bolt_refs[3], _bolt_var5]), _bolt_helper_replace(_bolt_refs[6], arguments=_bolt_helper_children([_bolt_helper_replace(_bolt_refs[5], arguments=_bolt_helper_children([_bolt_var6]))]))]))])))
            with _bolt_helper_branch(_bolt_var3_inverse) as _bolt_condition:
                if _bolt_condition:
                    with _bolt_runtime.push_nesting('execute:subcommand'):
                        _bolt_var7 = node
                        _bolt_var7 = _bolt_helper_get_attribute_handler(_bolt_var7)["range"]
                        _bolt_var7 = _bolt_helper_interpolate_range(_bolt_var7, _bolt_refs[9])
                        with _bolt_runtime.push_nesting('execute:if:score:target:targetObjective:matches:range:subcommand', *_bolt_helper_children([_bolt_refs[10], _bolt_refs[11], _bolt_var7])), _bolt_runtime.push_nesting('execute:run:subcommand'):
                            _bolt_var8 = node
                            _bolt_var8 = _bolt_helper_get_attribute_handler(_bolt_var8)["value"]
                            _bolt_var8 = _bolt_helper_interpolate_message(_bolt_var8, _bolt_refs[12])
                    _bolt_runtime.commands.append(_bolt_helper_replace(_bolt_refs[16], arguments=_bolt_helper_children([_bolt_helper_replace(_bolt_refs[15], arguments=_bolt_helper_children([*_bolt_helper_children([_bolt_refs[10], _bolt_refs[11], _bolt_var7]), _bolt_helper_replace(_bolt_refs[14], arguments=_bolt_helper_children([_bolt_helper_replace(_bolt_refs[13], arguments=_bolt_helper_children([_bolt_var8]))]))]))])))
        _bolt_runtime.commands.append(_bolt_helper_replace(_bolt_refs[18], arguments=_bolt_helper_children([*_bolt_helper_children([_bolt_var2]), _bolt_helper_replace(_bolt_refs[17], commands=_bolt_helper_children(_bolt_var9))])))
_bolt_var11 = _bolt_helper_replace(_bolt_refs[19], commands=_bolt_helper_children(_bolt_var10))
---
output = _bolt_var11
---
_bolt_refs[0]
<class 'bolt.ast.AstInterpolation'>
  location: SourceLocation(pos=87, lineno=2, colno=21)
  end_location: SourceLocation(pos=98, lineno=2, colno=32)
  prefix: None
  unpack: None
  converter: 'resource_location'
  value:
    <class 'bolt.ast.AstAttribute'>
_bolt_refs[1]
<class 'bolt.ast.AstInterpolation'>
  location: SourceLocation(pos=169, lineno=4, colno=40)
  end_location: SourceLocation(pos=179, lineno=4, colno=50)
  prefix: None
  unpack: None
  converter: 'range'
  value:
    <class 'bolt.ast.AstAttribute'>
_bolt_refs[2]
<class 'mecha.ast.AstSelector'>
  location: SourceLocation(pos=151, lineno=4, colno=22)
  end_location: SourceLocation(pos=153, lineno=4, colno=24)
  variable: 's'
  arguments:
    <empty>
_bolt_refs[3]
<class 'mecha.ast.AstObjective'>
  location: SourceLocation(pos=154, lineno=4, colno=25)
  end_location: SourceLocation(pos=160, lineno=4, colno=31)
  value: 'thingy'
_bolt_refs[4]
<class 'bolt.ast.AstInterpolation'>
  location: SourceLocation(pos=189, lineno=4, colno=60)
  end_location: SourceLocation(pos=202, lineno=4, colno=73)
  prefix: None
  unpack: None
  converter: 'resource_location'
  value:
    <class 'bolt.ast.AstAttribute'>
_bolt_refs[5]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=180, lineno=4, colno=51)
  end_location: SourceLocation(pos=202, lineno=4, colno=73)
  identifier: 'function:name'
  arguments:
    <class 'bolt.ast.AstInterpolation'>
_bolt_refs[6]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=180, lineno=4, colno=51)
  end_location: SourceLocation(pos=202, lineno=4, colno=73)
  identifier: 'execute:run:subcommand'
  arguments:
    <class 'mecha.ast.AstCommand'>
_bolt_refs[7]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=142, lineno=4, colno=13)
  end_location: SourceLocation(pos=202, lineno=4, colno=73)
  identifier: 'execute:if:score:target:targetObjective:matches:range:subcommand'
  arguments:
    <class 'mecha.ast.AstSelector'>
    <class 'mecha.ast.AstObjective'>
    <class 'bolt.ast.AstInterpolation'>
    <class 'mecha.ast.AstCommand'>
_bolt_refs[8]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=142, lineno=4, colno=13)
  end_location: SourceLocation(pos=202, lineno=4, colno=73)
  identifier: 'execute:subcommand'
  arguments:
    <class 'mecha.ast.AstCommand'>
_bolt_refs[9]
<class 'bolt.ast.AstInterpolation'>
  location: SourceLocation(pos=256, lineno=6, colno=40)
  end_location: SourceLocation(pos=266, lineno=6, colno=50)
  prefix: None
  unpack: None
  converter: 'range'
  value:
    <class 'bolt.ast.AstAttribute'>
_bolt_refs[10]
<class 'mecha.ast.AstSelector'>
  location: SourceLocation(pos=238, lineno=6, colno=22)
  end_location: SourceLocation(pos=240, lineno=6, colno=24)
  variable: 's'
  arguments:
    <empty>
_bolt_refs[11]
<class 'mecha.ast.AstObjective'>
  location: SourceLocation(pos=241, lineno=6, colno=25)
  end_location: SourceLocation(pos=247, lineno=6, colno=31)
  value: 'thingy'
_bolt_refs[12]
<class 'bolt.ast.AstInterpolation'>
  location: SourceLocation(pos=271, lineno=6, colno=55)
  end_location: SourceLocation(pos=281, lineno=6, colno=65)
  prefix: None
  unpack: None
  converter: 'message'
  value:
    <class 'bolt.ast.AstAttribute'>
_bolt_refs[13]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=267, lineno=6, colno=51)
  end_location: SourceLocation(pos=281, lineno=6, colno=65)
  identifier: 'say:message'
  arguments:
    <class 'bolt.ast.AstInterpolation'>
_bolt_refs[14]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=267, lineno=6, colno=51)
  end_location: SourceLocation(pos=281, lineno=6, colno=65)
  identifier: 'execute:run:subcommand'
  arguments:
    <class 'mecha.ast.AstCommand'>
_bolt_refs[15]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=229, lineno=6, colno=13)
  end_location: SourceLocation(pos=281, lineno=6, colno=65)
  identifier: 'execute:if:score:target:targetObjective:matches:range:subcommand'
  arguments:
    <class 'mecha.ast.AstSelector'>
    <class 'mecha.ast.AstObjective'>
    <class 'bolt.ast.AstInterpolation'>
    <class 'mecha.ast.AstCommand'>
_bolt_refs[16]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=229, lineno=6, colno=13)
  end_location: SourceLocation(pos=281, lineno=6, colno=65)
  identifier: 'execute:subcommand'
  arguments:
    <class 'mecha.ast.AstCommand'>
_bolt_refs[17]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=108, lineno=3, colno=9)
  end_location: SourceLocation(pos=281, lineno=6, colno=65)
  commands:
    <class 'mecha.ast.AstCommand'>
    <class 'mecha.ast.AstCommand'>
_bolt_refs[18]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=71, lineno=2, colno=5)
  end_location: SourceLocation(pos=281, lineno=6, colno=65)
  identifier: 'append:function:name:commands'
  arguments:
    <class 'bolt.ast.AstInterpolation'>
    <class 'mecha.ast.AstRoot'>
_bolt_refs[19]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=282, lineno=7, colno=1)
  commands:
    <class 'mecha.ast.AstCommand'>
