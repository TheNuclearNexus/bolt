_bolt_lineno = [1, 10], [1, 3]
_bolt_helper_children = _bolt_runtime.helpers['children']
_bolt_helper_macro_call = _bolt_runtime.helpers['macro_call']
_bolt_helper_replace = _bolt_runtime.helpers['replace']
with _bolt_runtime.scope() as _bolt_var1:
    def _bolt_macro0(thing):
        pass
    with _bolt_runtime.push_nesting('execute:subcommand'):
        with _bolt_runtime.push_nesting('execute:as:targets:subcommand', *_bolt_refs[1:2]):
            _bolt_var0 = _bolt_helper_macro_call(_bolt_runtime, _bolt_macro0, _bolt_refs[0])
    _bolt_runtime.commands.append(_bolt_helper_replace(_bolt_refs[3], arguments=_bolt_helper_children([_bolt_helper_replace(_bolt_refs[2], arguments=_bolt_helper_children([*_bolt_refs[1:2], *_bolt_var0]))])))
_bolt_var2 = _bolt_helper_replace(_bolt_refs[4], commands=_bolt_helper_children(_bolt_var1))
---
output = _bolt_var2
---
_bolt_refs[0]
<class 'bolt.ast.AstMacroCall'>
  location: SourceLocation(pos=53, lineno=3, colno=7)
  end_location: SourceLocation(pos=68, lineno=3, colno=22)
  identifier: 'execute:hello:subcommand'
  arguments:
    <class 'mecha.ast.AstCommand'>
_bolt_refs[1]
<class 'mecha.ast.AstSelector'>
  location: SourceLocation(pos=50, lineno=3, colno=4)
  end_location: SourceLocation(pos=52, lineno=3, colno=6)
  variable: 'p'
  arguments:
    <empty>
_bolt_refs[2]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=47, lineno=3, colno=1)
  end_location: SourceLocation(pos=68, lineno=3, colno=22)
  identifier: 'execute:as:targets:subcommand'
  arguments:
    <class 'mecha.ast.AstSelector'>
    <class 'bolt.ast.AstMacroCall'>
_bolt_refs[3]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=47, lineno=3, colno=1)
  end_location: SourceLocation(pos=68, lineno=3, colno=22)
  identifier: 'execute:subcommand'
  arguments:
    <class 'mecha.ast.AstCommand'>
_bolt_refs[4]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=68, lineno=3, colno=22)
  commands:
    <class 'bolt.ast.AstMacro'>
    <class 'mecha.ast.AstCommand'>
