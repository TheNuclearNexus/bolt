_bolt_lineno = [1, 7, 8, 15, 16, 22], [1, 2, 3, 5, 6, 7]
_bolt_helper_get_rebind = _bolt_runtime.helpers['get_rebind']
_bolt_helper_children = _bolt_runtime.helpers['children']
_bolt_helper_replace = _bolt_runtime.helpers['replace']
with _bolt_runtime.scope() as _bolt_var1:
    def foo():
        global thing
        _bolt_var0 = bar
        _bolt_var0 = _bolt_var0()
        _bolt_rebind = _bolt_helper_get_rebind(thing)
        thing += _bolt_var0
        if _bolt_rebind is not None:
            thing = _bolt_rebind(thing)
    def bar():
        global thing
        _bolt_var0 = foo
        _bolt_var0 = _bolt_var0()
        _bolt_rebind = _bolt_helper_get_rebind(thing)
        thing += _bolt_var0
        if _bolt_rebind is not None:
            thing = _bolt_rebind(thing)
    _bolt_var0 = bar
    _bolt_var0 = _bolt_var0()
    thing = _bolt_var0
_bolt_var2 = _bolt_helper_replace(_bolt_refs[0], commands=_bolt_helper_children(_bolt_var1))
---
output = _bolt_var2
---
_bolt_refs[0]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=108, lineno=8, colno=1)
  commands:
    <class 'mecha.ast.AstCommand'>
    <class 'mecha.ast.AstCommand'>
    <class 'bolt.ast.AstStatement'>
