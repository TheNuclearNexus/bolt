_bolt_lineno = [1, 12, 19, 26], [1, 3, 5, 7]
_bolt_helper_operator_not = _bolt_runtime.helpers['operator_not']
_bolt_helper_branch = _bolt_runtime.helpers['branch']
_bolt_helper_children = _bolt_runtime.helpers['children']
_bolt_helper_replace = _bolt_runtime.helpers['replace']
with _bolt_runtime.scope() as _bolt_var4:
    _bolt_var0 = 1
    _bolt_var0_inverse = _bolt_helper_operator_not(_bolt_var0)
    with _bolt_helper_branch(_bolt_var0) as _bolt_condition:
        if _bolt_condition:
            _bolt_runtime.commands.extend(_bolt_refs[0].commands)
    with _bolt_helper_branch(_bolt_var0_inverse) as _bolt_condition:
        if _bolt_condition:
            _bolt_var1 = 2
            _bolt_var1_inverse = _bolt_helper_operator_not(_bolt_var1)
            with _bolt_helper_branch(_bolt_var1) as _bolt_condition:
                if _bolt_condition:
                    _bolt_runtime.commands.extend(_bolt_refs[1].commands)
            with _bolt_helper_branch(_bolt_var1_inverse) as _bolt_condition:
                if _bolt_condition:
                    _bolt_var2 = 3
                    _bolt_var2_inverse = _bolt_helper_operator_not(_bolt_var2)
                    with _bolt_helper_branch(_bolt_var2) as _bolt_condition:
                        if _bolt_condition:
                            _bolt_runtime.commands.extend(_bolt_refs[2].commands)
                    with _bolt_helper_branch(_bolt_var2_inverse) as _bolt_condition:
                        if _bolt_condition:
                            _bolt_var3 = 4
                            with _bolt_helper_branch(_bolt_var3) as _bolt_condition:
                                if _bolt_condition:
                                    _bolt_runtime.commands.extend(_bolt_refs[3].commands)
    _bolt_runtime.commands.append(_bolt_refs[4])
_bolt_var5 = _bolt_helper_replace(_bolt_refs[5], commands=_bolt_helper_children(_bolt_var4))
---
output = _bolt_var5
---
_bolt_refs[0]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=10, lineno=2, colno=5)
  end_location: SourceLocation(pos=15, lineno=2, colno=10)
  commands:
    <class 'mecha.ast.AstCommand'>
_bolt_refs[1]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=28, lineno=4, colno=5)
  end_location: SourceLocation(pos=33, lineno=4, colno=10)
  commands:
    <class 'mecha.ast.AstCommand'>
_bolt_refs[2]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=46, lineno=6, colno=5)
  end_location: SourceLocation(pos=51, lineno=6, colno=10)
  commands:
    <class 'mecha.ast.AstCommand'>
_bolt_refs[3]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=64, lineno=8, colno=5)
  end_location: SourceLocation(pos=69, lineno=8, colno=10)
  commands:
    <class 'mecha.ast.AstCommand'>
_bolt_refs[4]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=70, lineno=9, colno=1)
  end_location: SourceLocation(pos=78, lineno=9, colno=9)
  identifier: 'say:message'
  arguments:
    <class 'mecha.ast.AstMessage'>
_bolt_refs[5]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=78, lineno=9, colno=9)
  commands:
    <class 'mecha.ast.AstCommand'>
    <class 'mecha.ast.AstCommand'>
    <class 'mecha.ast.AstCommand'>
