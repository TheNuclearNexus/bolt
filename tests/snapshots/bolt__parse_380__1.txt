_bolt_lineno = [1, 13, 15, 17, 19, 20, 33], [1, 3, 5, 3, 7, 8, 9]
_bolt_helper_import_module = _bolt_runtime.helpers['import_module']
_bolt_helper_get_attribute_handler = _bolt_runtime.helpers['get_attribute_handler']
_bolt_helper_children = _bolt_runtime.helpers['children']
_bolt_helper_get_rebind = _bolt_runtime.helpers['get_rebind']
_bolt_helper_interpolate_message = _bolt_runtime.helpers['interpolate_message']
_bolt_helper_replace = _bolt_runtime.helpers['replace']
_bolt_helper_exit_stack = _bolt_runtime.helpers['exit_stack']
with _bolt_helper_exit_stack() as _bolt_fused_with_statement0:
    _bolt_var7 = _bolt_fused_with_statement0.enter_context(_bolt_runtime.scope())
    _bolt_from_import = _bolt_helper_import_module('contextlib')
    contextmanager = _bolt_helper_get_attribute_handler(_bolt_from_import)["contextmanager"]
    _bolt_var0 = contextmanager
    def a(v):
        _bolt_var1 = v
        yield _bolt_var1
    a = _bolt_var0(a)
    _bolt_var1 = None
    x = _bolt_var1
    _bolt_var2 = a
    _bolt_var3 = 1
    _bolt_var2 = _bolt_var2(_bolt_var3)
    _bolt_with = _bolt_fused_with_statement0.enter_context(_bolt_var2)
    _bolt_rebind = _bolt_helper_get_rebind(x)
    x = _bolt_with
    if _bolt_rebind is not None:
        x = _bolt_rebind(x)
    _bolt_var4 = a
    _bolt_var5 = x
    _bolt_var4 = _bolt_var4(_bolt_var5)
    _bolt_with = _bolt_fused_with_statement0.enter_context(_bolt_var4)
    y = _bolt_with
    _bolt_var6 = y
    _bolt_var6 = _bolt_helper_interpolate_message(_bolt_var6, _bolt_refs[0])
    _bolt_runtime.commands.append(_bolt_helper_replace(_bolt_refs[1], arguments=_bolt_helper_children([_bolt_var6])))
_bolt_var8 = _bolt_helper_replace(_bolt_refs[2], commands=_bolt_helper_children(_bolt_var7))
---
output = _bolt_var8
---
_bolt_refs[0]
<class 'bolt.ast.AstInterpolation'>
  location: SourceLocation(pos=122, lineno=9, colno=9)
  end_location: SourceLocation(pos=123, lineno=9, colno=10)
  prefix: None
  unpack: None
  converter: 'message'
  value:
    <class 'bolt.ast.AstIdentifier'>
_bolt_refs[1]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=118, lineno=9, colno=5)
  end_location: SourceLocation(pos=123, lineno=9, colno=10)
  identifier: 'say:message'
  arguments:
    <class 'bolt.ast.AstInterpolation'>
_bolt_refs[2]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=124, lineno=10, colno=1)
  commands:
    <class 'bolt.ast.AstFromImport'>
    <class 'mecha.ast.AstCommand'>
    <class 'bolt.ast.AstStatement'>
    <class 'mecha.ast.AstCommand'>
