x = 8
if score @s tmp matches (x, None) say wat
---
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=47, lineno=2, colno=42)
  commands:
    <class 'bolt.ast.AstStatement'>
      location: SourceLocation(pos=0, lineno=1, colno=1)
      end_location: SourceLocation(pos=5, lineno=1, colno=6)
      identifier: 'mecha:sentinel'
      arguments:
        <class 'bolt.ast.AstAssignment'>
          location: SourceLocation(pos=0, lineno=1, colno=1)
          end_location: SourceLocation(pos=5, lineno=1, colno=6)
          operator: '='
          target:
            <class 'bolt.ast.AstTargetIdentifier'>
              location: SourceLocation(pos=0, lineno=1, colno=1)
              end_location: SourceLocation(pos=1, lineno=1, colno=2)
              value: 'x'
              rebind: False
          value:
            <class 'bolt.ast.AstValue'>
              location: SourceLocation(pos=4, lineno=1, colno=5)
              end_location: SourceLocation(pos=5, lineno=1, colno=6)
              value: 8
          type_annotation: None
    <class 'mecha.ast.AstCommand'>
      location: SourceLocation(pos=6, lineno=2, colno=1)
      end_location: SourceLocation(pos=47, lineno=2, colno=42)
      identifier: 'execute:subcommand'
      arguments:
        <class 'mecha.ast.AstCommand'>
          location: SourceLocation(pos=6, lineno=2, colno=1)
          end_location: SourceLocation(pos=47, lineno=2, colno=42)
          identifier: 'execute:if:score:target:targetObjective:matches:range:subcommand'
          arguments:
            <class 'mecha.ast.AstSelector'>
              location: SourceLocation(pos=15, lineno=2, colno=10)
              end_location: SourceLocation(pos=17, lineno=2, colno=12)
              variable: 's'
              arguments:
                <empty>
            <class 'mecha.ast.AstObjective'>
              location: SourceLocation(pos=18, lineno=2, colno=13)
              end_location: SourceLocation(pos=21, lineno=2, colno=16)
              value: 'tmp'
            <class 'bolt.ast.AstInterpolation'>
              location: SourceLocation(pos=30, lineno=2, colno=25)
              end_location: SourceLocation(pos=39, lineno=2, colno=34)
              prefix: None
              unpack: None
              converter: 'range'
              value:
                <class 'bolt.ast.AstTuple'>
                  location: SourceLocation(pos=30, lineno=2, colno=25)
                  end_location: SourceLocation(pos=39, lineno=2, colno=34)
                  items:
                    <class 'bolt.ast.AstIdentifier'>
                      location: SourceLocation(pos=31, lineno=2, colno=26)
                      end_location: SourceLocation(pos=32, lineno=2, colno=27)
                      value: 'x'
                    <class 'bolt.ast.AstValue'>
                      location: SourceLocation(pos=34, lineno=2, colno=29)
                      end_location: SourceLocation(pos=38, lineno=2, colno=33)
                      value: None
            <class 'mecha.ast.AstCommand'>
              location: SourceLocation(pos=40, lineno=2, colno=35)
              end_location: SourceLocation(pos=47, lineno=2, colno=42)
              identifier: 'execute:run:subcommand'
              arguments:
                <class 'mecha.ast.AstCommand'>
                  location: SourceLocation(pos=40, lineno=2, colno=35)
                  end_location: SourceLocation(pos=47, lineno=2, colno=42)
                  identifier: 'say:message'
                  arguments:
                    <class 'mecha.ast.AstMessage'>
                      location: SourceLocation(pos=44, lineno=2, colno=39)
                      end_location: SourceLocation(pos=47, lineno=2, colno=42)
                      fragments:
                        <class 'mecha.ast.AstMessageText'>
                          location: SourceLocation(pos=44, lineno=2, colno=39)
                          end_location: SourceLocation(pos=47, lineno=2, colno=42)
                          value: 'wat'
